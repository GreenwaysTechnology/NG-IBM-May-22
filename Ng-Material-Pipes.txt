.............................................................................................
				  Data Formating -Pipes
.............................................................................................

..............................................................................................
				 Pipes
..............................................................................................

What is pipe?
 pipe object used for data formating.

eg:
 show uppercase
 show money values - $,#,
 show date format  - 1/10/2021 , feb 10 2021...
 custom formates

Angular provides lot of built in pipes, you can write your own pipes as well.
....
Syntax:
  some data | nameof the pipe.

Pipe with Input :
  some data | nameof the pipe:input.

Builtin pipes:

DatePipe: Formats a date value according to locale rules.

UpperCasePipe: Transforms text to all upper case.

LowerCasePipe: Transforms text to all lower case.

CurrencyPipe: Transforms a number to a currency string, formatted according to locale rules.

DecimalPipe: Transforms a number into a string with a decimal point, formatted according to locale rules.

PercentPipe: Transforms a number to a percentage string, formatted according to locale rules.

asyncPipe : to bind list of values async
   - used to bind observables directly.

<div>
    <!-- <div *ngFor="let todo of todos">
        <p>{{todo.id}} {{todo.title}} {{todo.completed ? "done" : "Not Done"}}</p>
    </div> -->
    <div *ngFor="let todo of todos | async">
        <p>{{todo.id}} {{todo.title}} {{todo.completed ? "done" : "Not Done"}}</p>
    </div>
</div>
import { Component, OnInit } from '@angular/core';
import { Observable } from 'rxjs';
import { TodoService } from './todo.service';
import { Todo } from './todo.type';

@Component({
  selector: 'app-todo',
  templateUrl: './todo.component.html',
  styles: [
  ]
})
export class TodoComponent implements OnInit {

  // todos: Array<Todo> = [];
  todos!: Observable<Todo[]>;
  constructor(private todoService: TodoService) { }

  ngOnInit(): void {
    // this.todoService.findAllTodos().subscribe(todos => {
    //   this.todos = todos
    // })
    this.todos = this.todoService.findAllTodos()
  }

}
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DataFormatComponent } from './data-format.component';
import {HttpClientModule} from '@angular/common/http'
import { TodoComponent } from './todo.component';



@NgModule({
  declarations: [
    DataFormatComponent,TodoComponent
  ],
  imports: [
    CommonModule,HttpClientModule
  ],
  exports: [
    DataFormatComponent
  ]
})
export class InfoModule { }
...
<div>
    <h1 style="text-align: center;">Pipes</h1>
    <div>
        <h1>String</h1>
        <p>{{message | uppercase}}</p>
        <p>{{message | lowercase}}</p>
        <p>{{message | titlecase}}</p>
        <h1>Numbers</h1>
        <p>{{price | percent}}</p>
        <p>{{price | currency}}</p>
        <p>{{price | currency:'INR'}}</p>
        <h1>Date</h1>
        <p>{{date | date}}</p>
        <p>{{date | date:'short'}}</p>
        <p>{{date | date:'dd/MM/yyyy'}}</p>
        <!-- Pipe chaining -->
        <p>{{date | date:'medium' | uppercase}}</p>
        <h1>Object</h1>
        <p>{{emp.id}} {{emp.name}} {{emp.city}}</p>
        <p>{{emp | json}}</p>
        <h1>Async Pipe</h1>
        <app-todo></app-todo>
    </div>

</div>
import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-data-format',
  templateUrl: './data-format.component.html',
  styles: [
  ]
})
export class DataFormatComponent implements OnInit {
  message: string = "hello!"
  price: number = 1000.898766
  date: Date = new Date()

  emp = {
    id: 1,
    name: 'Subramanian',
    city: 'Coimbatore'
  }

  constructor() { }

  ngOnInit(): void {
  }

}
.............................................................................................
				Custom Pipes
.............................................................................................

What is Pipe?

Infra Object like component,module,service

ng g p shared/Decimalfraction --flat=true --export=true --module=shared --skip-tests=false
CREATE src/app/shared/decimalfraction.pipe.spec.ts (223 bytes)
CREATE src/app/shared/decimalfraction.pipe.ts (235 bytes)
UPDATE src/app/shared/shared.module.ts (321 bytes)

import { Pipe, PipeTransform } from '@angular/core';

@Pipe({
  name: 'decimalfraction'
})
export class DecimalfractionPipe implements PipeTransform {

  transform(value: number, numberofDigits: number = 1): string {
    //pipe logic :Decimal round of pipe
    return value.toFixed(numberofDigits)
  }

}

import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { DecimalfractionPipe } from './decimalfraction.pipe';

@NgModule({
  declarations: [
    DecimalfractionPipe
  ],
  imports: [
    CommonModule
  ],
  exports: [
    DecimalfractionPipe
  ]
})
export class SharedModule { }


<h1>Custom Pipe</h1>
<p>{{mynumber | decimalfraction:3}}</p>

import { Component, OnInit } from '@angular/core';

@Component({
  selector: 'app-data-format',
  templateUrl: './data-format.component.html',
  styles: [
  ]
})
export class DataFormatComponent implements OnInit {
  message: string = "hello!"
  price: number = 1000.898766
  date: Date = new Date()
  mynumber: number = 18.78343434

  emp = {
    id: 1,
    name: 'Subramanian',
    city: 'Coimbatore'
  }

  constructor() { }

  ngOnInit(): void {
  }

}
.............................................................................................
